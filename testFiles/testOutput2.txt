Welcome to puzzle 8!
//test file for HW2

//Check Solve for Empty Puzzle
solve BFS
Empty Puzzle

//Check Goal State
setState 0 1 2 3 4 5 6 7 8
printState
  1 2 
3 4 5 
6 7 8 
solve BFS
Puzzle already in Goal State

//Check Nodes Created
//Expects 6 nodes to be created by going in the order: left, right, up, down
//This is because the getSuccessors method makes all the valid child states into nodes before checking the if it is the goal state
//Nodes created: Initial node (1); Successors(3): left, up, down; Add to queue(2): left, up, down (goal doesn't count). Total: 1 + 3 + 2 = 6
setState 3 1 2 0 4 5 6 7 8
printState
3 1 2 
  4 5 
6 7 8 
solve BFS
Nodes created during search: 6
Solution length: 1
Move sequence:
move down

//Check Nodes Created
//Expects 5 nodes to be created
//Nodes created: Initial node (1); Successors(3): left, right, up; Add to queue(1): left, right (goal doesn't count). Total: 1 + 3 + 1 = 5
setState 1 0 2 3 4 5 6 7 8
printState
1   2 
3 4 5 
6 7 8 
solve BFS
Nodes created during search: 5
Solution length: 1
Move sequence:
move right

//Check Scrambled States
setSeed 1
scrambleState 5
printState
1 4 2 
3 7 5 
6   8 
solve BFS
Nodes created during search: 44
Solution length: 3
Move sequence:
move down
move down
move right

//Check maxNodes expect error
scrambleState 20
printState
  4 2 
1 5 8 
3 6 7 
solve BFS 10
Error: maxnodes limit (10) reached

//Check bigger maxNodes
scrambleState 50
printState
1 4 2 
5 8 7 
3 6   
solve BFS 3000
Nodes created during search: 1525
Solution length: 10
Move sequence:
move down
move right
move right
move up
move left
move left
move down
move right
move down
move right

//Verify Solution
scrambleState 50
move down
move right
move right
move up
move left
move left
move down
move right
move down
move right
printState
  1 2 
3 4 5 
6 7 8 